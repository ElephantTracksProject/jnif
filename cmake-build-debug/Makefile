# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.8

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list


# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /Applications/CLion.app/Contents/bin/cmake/bin/cmake

# The command to remove a file.
RM = /Applications/CLion.app/Contents/bin/cmake/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /Volumes/Data/work/jnif

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /Volumes/Data/work/jnif/cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/Applications/CLion.app/Contents/bin/cmake/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/Applications/CLion.app/Contents/bin/cmake/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /Volumes/Data/work/jnif/cmake-build-debug/CMakeFiles /Volumes/Data/work/jnif/cmake-build-debug/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /Volumes/Data/work/jnif/cmake-build-debug/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named testjars

# Build rule for target.
testjars: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 testjars
.PHONY : testjars

# fast build rule for target.
testjars/fast:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/build
.PHONY : testjars/fast

#=============================================================================
# Target rules for targets named testunit

# Build rule for target.
testunit: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 testunit
.PHONY : testunit

# fast build rule for target.
testunit/fast:
	$(MAKE) -f CMakeFiles/testunit.dir/build.make CMakeFiles/testunit.dir/build
.PHONY : testunit/fast

#=============================================================================
# Target rules for targets named jnifp

# Build rule for target.
jnifp: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 jnifp
.PHONY : jnifp

# fast build rule for target.
jnifp/fast:
	$(MAKE) -f CMakeFiles/jnifp.dir/build.make CMakeFiles/jnifp.dir/build
.PHONY : jnifp/fast

#=============================================================================
# Target rules for targets named jnif

# Build rule for target.
jnif: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 jnif
.PHONY : jnif

# fast build rule for target.
jnif/fast:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/build
.PHONY : jnif/fast

src-jnifp/jnifp.o: src-jnifp/jnifp.cpp.o

.PHONY : src-jnifp/jnifp.o

# target to build an object file
src-jnifp/jnifp.cpp.o:
	$(MAKE) -f CMakeFiles/jnifp.dir/build.make CMakeFiles/jnifp.dir/src-jnifp/jnifp.cpp.o
.PHONY : src-jnifp/jnifp.cpp.o

src-jnifp/jnifp.i: src-jnifp/jnifp.cpp.i

.PHONY : src-jnifp/jnifp.i

# target to preprocess a source file
src-jnifp/jnifp.cpp.i:
	$(MAKE) -f CMakeFiles/jnifp.dir/build.make CMakeFiles/jnifp.dir/src-jnifp/jnifp.cpp.i
.PHONY : src-jnifp/jnifp.cpp.i

src-jnifp/jnifp.s: src-jnifp/jnifp.cpp.s

.PHONY : src-jnifp/jnifp.s

# target to generate assembly for a file
src-jnifp/jnifp.cpp.s:
	$(MAKE) -f CMakeFiles/jnifp.dir/build.make CMakeFiles/jnifp.dir/src-jnifp/jnifp.cpp.s
.PHONY : src-jnifp/jnifp.cpp.s

src-libjnif/BasicBlock.o: src-libjnif/BasicBlock.cpp.o

.PHONY : src-libjnif/BasicBlock.o

# target to build an object file
src-libjnif/BasicBlock.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/BasicBlock.cpp.o
.PHONY : src-libjnif/BasicBlock.cpp.o

src-libjnif/BasicBlock.i: src-libjnif/BasicBlock.cpp.i

.PHONY : src-libjnif/BasicBlock.i

# target to preprocess a source file
src-libjnif/BasicBlock.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/BasicBlock.cpp.i
.PHONY : src-libjnif/BasicBlock.cpp.i

src-libjnif/BasicBlock.s: src-libjnif/BasicBlock.cpp.s

.PHONY : src-libjnif/BasicBlock.s

# target to generate assembly for a file
src-libjnif/BasicBlock.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/BasicBlock.cpp.s
.PHONY : src-libjnif/BasicBlock.cpp.s

src-libjnif/ClassHierarchy.o: src-libjnif/ClassHierarchy.cpp.o

.PHONY : src-libjnif/ClassHierarchy.o

# target to build an object file
src-libjnif/ClassHierarchy.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ClassHierarchy.cpp.o
.PHONY : src-libjnif/ClassHierarchy.cpp.o

src-libjnif/ClassHierarchy.i: src-libjnif/ClassHierarchy.cpp.i

.PHONY : src-libjnif/ClassHierarchy.i

# target to preprocess a source file
src-libjnif/ClassHierarchy.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ClassHierarchy.cpp.i
.PHONY : src-libjnif/ClassHierarchy.cpp.i

src-libjnif/ClassHierarchy.s: src-libjnif/ClassHierarchy.cpp.s

.PHONY : src-libjnif/ClassHierarchy.s

# target to generate assembly for a file
src-libjnif/ClassHierarchy.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ClassHierarchy.cpp.s
.PHONY : src-libjnif/ClassHierarchy.cpp.s

src-libjnif/ControlFlowGraph.o: src-libjnif/ControlFlowGraph.cpp.o

.PHONY : src-libjnif/ControlFlowGraph.o

# target to build an object file
src-libjnif/ControlFlowGraph.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ControlFlowGraph.cpp.o
.PHONY : src-libjnif/ControlFlowGraph.cpp.o

src-libjnif/ControlFlowGraph.i: src-libjnif/ControlFlowGraph.cpp.i

.PHONY : src-libjnif/ControlFlowGraph.i

# target to preprocess a source file
src-libjnif/ControlFlowGraph.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ControlFlowGraph.cpp.i
.PHONY : src-libjnif/ControlFlowGraph.cpp.i

src-libjnif/ControlFlowGraph.s: src-libjnif/ControlFlowGraph.cpp.s

.PHONY : src-libjnif/ControlFlowGraph.s

# target to generate assembly for a file
src-libjnif/ControlFlowGraph.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/ControlFlowGraph.cpp.s
.PHONY : src-libjnif/ControlFlowGraph.cpp.s

src-libjnif/Error.o: src-libjnif/Error.cpp.o

.PHONY : src-libjnif/Error.o

# target to build an object file
src-libjnif/Error.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Error.cpp.o
.PHONY : src-libjnif/Error.cpp.o

src-libjnif/Error.i: src-libjnif/Error.cpp.i

.PHONY : src-libjnif/Error.i

# target to preprocess a source file
src-libjnif/Error.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Error.cpp.i
.PHONY : src-libjnif/Error.cpp.i

src-libjnif/Error.s: src-libjnif/Error.cpp.s

.PHONY : src-libjnif/Error.s

# target to generate assembly for a file
src-libjnif/Error.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Error.cpp.s
.PHONY : src-libjnif/Error.cpp.s

src-libjnif/Frame.o: src-libjnif/Frame.cpp.o

.PHONY : src-libjnif/Frame.o

# target to build an object file
src-libjnif/Frame.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Frame.cpp.o
.PHONY : src-libjnif/Frame.cpp.o

src-libjnif/Frame.i: src-libjnif/Frame.cpp.i

.PHONY : src-libjnif/Frame.i

# target to preprocess a source file
src-libjnif/Frame.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Frame.cpp.i
.PHONY : src-libjnif/Frame.cpp.i

src-libjnif/Frame.s: src-libjnif/Frame.cpp.s

.PHONY : src-libjnif/Frame.s

# target to generate assembly for a file
src-libjnif/Frame.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/Frame.cpp.s
.PHONY : src-libjnif/Frame.cpp.s

src-libjnif/jar/ioapi.o: src-libjnif/jar/ioapi.cpp.o

.PHONY : src-libjnif/jar/ioapi.o

# target to build an object file
src-libjnif/jar/ioapi.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/ioapi.cpp.o
.PHONY : src-libjnif/jar/ioapi.cpp.o

src-libjnif/jar/ioapi.i: src-libjnif/jar/ioapi.cpp.i

.PHONY : src-libjnif/jar/ioapi.i

# target to preprocess a source file
src-libjnif/jar/ioapi.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/ioapi.cpp.i
.PHONY : src-libjnif/jar/ioapi.cpp.i

src-libjnif/jar/ioapi.s: src-libjnif/jar/ioapi.cpp.s

.PHONY : src-libjnif/jar/ioapi.s

# target to generate assembly for a file
src-libjnif/jar/ioapi.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/ioapi.cpp.s
.PHONY : src-libjnif/jar/ioapi.cpp.s

src-libjnif/jar/unzip.o: src-libjnif/jar/unzip.cpp.o

.PHONY : src-libjnif/jar/unzip.o

# target to build an object file
src-libjnif/jar/unzip.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/unzip.cpp.o
.PHONY : src-libjnif/jar/unzip.cpp.o

src-libjnif/jar/unzip.i: src-libjnif/jar/unzip.cpp.i

.PHONY : src-libjnif/jar/unzip.i

# target to preprocess a source file
src-libjnif/jar/unzip.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/unzip.cpp.i
.PHONY : src-libjnif/jar/unzip.cpp.i

src-libjnif/jar/unzip.s: src-libjnif/jar/unzip.cpp.s

.PHONY : src-libjnif/jar/unzip.s

# target to generate assembly for a file
src-libjnif/jar/unzip.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/jar/unzip.cpp.s
.PHONY : src-libjnif/jar/unzip.cpp.s

src-libjnif/model/Arena.o: src-libjnif/model/Arena.cpp.o

.PHONY : src-libjnif/model/Arena.o

# target to build an object file
src-libjnif/model/Arena.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Arena.cpp.o
.PHONY : src-libjnif/model/Arena.cpp.o

src-libjnif/model/Arena.i: src-libjnif/model/Arena.cpp.i

.PHONY : src-libjnif/model/Arena.i

# target to preprocess a source file
src-libjnif/model/Arena.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Arena.cpp.i
.PHONY : src-libjnif/model/Arena.cpp.i

src-libjnif/model/Arena.s: src-libjnif/model/Arena.cpp.s

.PHONY : src-libjnif/model/Arena.s

# target to generate assembly for a file
src-libjnif/model/Arena.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Arena.cpp.s
.PHONY : src-libjnif/model/Arena.cpp.s

src-libjnif/model/ClassFile.o: src-libjnif/model/ClassFile.cpp.o

.PHONY : src-libjnif/model/ClassFile.o

# target to build an object file
src-libjnif/model/ClassFile.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ClassFile.cpp.o
.PHONY : src-libjnif/model/ClassFile.cpp.o

src-libjnif/model/ClassFile.i: src-libjnif/model/ClassFile.cpp.i

.PHONY : src-libjnif/model/ClassFile.i

# target to preprocess a source file
src-libjnif/model/ClassFile.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ClassFile.cpp.i
.PHONY : src-libjnif/model/ClassFile.cpp.i

src-libjnif/model/ClassFile.s: src-libjnif/model/ClassFile.cpp.s

.PHONY : src-libjnif/model/ClassFile.s

# target to generate assembly for a file
src-libjnif/model/ClassFile.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ClassFile.cpp.s
.PHONY : src-libjnif/model/ClassFile.cpp.s

src-libjnif/model/ConstPool.o: src-libjnif/model/ConstPool.cpp.o

.PHONY : src-libjnif/model/ConstPool.o

# target to build an object file
src-libjnif/model/ConstPool.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ConstPool.cpp.o
.PHONY : src-libjnif/model/ConstPool.cpp.o

src-libjnif/model/ConstPool.i: src-libjnif/model/ConstPool.cpp.i

.PHONY : src-libjnif/model/ConstPool.i

# target to preprocess a source file
src-libjnif/model/ConstPool.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ConstPool.cpp.i
.PHONY : src-libjnif/model/ConstPool.cpp.i

src-libjnif/model/ConstPool.s: src-libjnif/model/ConstPool.cpp.s

.PHONY : src-libjnif/model/ConstPool.s

# target to generate assembly for a file
src-libjnif/model/ConstPool.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/ConstPool.cpp.s
.PHONY : src-libjnif/model/ConstPool.cpp.s

src-libjnif/model/Inst.o: src-libjnif/model/Inst.cpp.o

.PHONY : src-libjnif/model/Inst.o

# target to build an object file
src-libjnif/model/Inst.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Inst.cpp.o
.PHONY : src-libjnif/model/Inst.cpp.o

src-libjnif/model/Inst.i: src-libjnif/model/Inst.cpp.i

.PHONY : src-libjnif/model/Inst.i

# target to preprocess a source file
src-libjnif/model/Inst.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Inst.cpp.i
.PHONY : src-libjnif/model/Inst.cpp.i

src-libjnif/model/Inst.s: src-libjnif/model/Inst.cpp.s

.PHONY : src-libjnif/model/Inst.s

# target to generate assembly for a file
src-libjnif/model/Inst.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Inst.cpp.s
.PHONY : src-libjnif/model/Inst.cpp.s

src-libjnif/model/InstList.o: src-libjnif/model/InstList.cpp.o

.PHONY : src-libjnif/model/InstList.o

# target to build an object file
src-libjnif/model/InstList.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/InstList.cpp.o
.PHONY : src-libjnif/model/InstList.cpp.o

src-libjnif/model/InstList.i: src-libjnif/model/InstList.cpp.i

.PHONY : src-libjnif/model/InstList.i

# target to preprocess a source file
src-libjnif/model/InstList.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/InstList.cpp.i
.PHONY : src-libjnif/model/InstList.cpp.i

src-libjnif/model/InstList.s: src-libjnif/model/InstList.cpp.s

.PHONY : src-libjnif/model/InstList.s

# target to generate assembly for a file
src-libjnif/model/InstList.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/InstList.cpp.s
.PHONY : src-libjnif/model/InstList.cpp.s

src-libjnif/model/Member.o: src-libjnif/model/Member.cpp.o

.PHONY : src-libjnif/model/Member.o

# target to build an object file
src-libjnif/model/Member.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Member.cpp.o
.PHONY : src-libjnif/model/Member.cpp.o

src-libjnif/model/Member.i: src-libjnif/model/Member.cpp.i

.PHONY : src-libjnif/model/Member.i

# target to preprocess a source file
src-libjnif/model/Member.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Member.cpp.i
.PHONY : src-libjnif/model/Member.cpp.i

src-libjnif/model/Member.s: src-libjnif/model/Member.cpp.s

.PHONY : src-libjnif/model/Member.s

# target to generate assembly for a file
src-libjnif/model/Member.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Member.cpp.s
.PHONY : src-libjnif/model/Member.cpp.s

src-libjnif/model/Type.o: src-libjnif/model/Type.cpp.o

.PHONY : src-libjnif/model/Type.o

# target to build an object file
src-libjnif/model/Type.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Type.cpp.o
.PHONY : src-libjnif/model/Type.cpp.o

src-libjnif/model/Type.i: src-libjnif/model/Type.cpp.i

.PHONY : src-libjnif/model/Type.i

# target to preprocess a source file
src-libjnif/model/Type.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Type.cpp.i
.PHONY : src-libjnif/model/Type.cpp.i

src-libjnif/model/Type.s: src-libjnif/model/Type.cpp.s

.PHONY : src-libjnif/model/Type.s

# target to generate assembly for a file
src-libjnif/model/Type.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Type.cpp.s
.PHONY : src-libjnif/model/Type.cpp.s

src-libjnif/model/TypeFactory.o: src-libjnif/model/TypeFactory.cpp.o

.PHONY : src-libjnif/model/TypeFactory.o

# target to build an object file
src-libjnif/model/TypeFactory.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/TypeFactory.cpp.o
.PHONY : src-libjnif/model/TypeFactory.cpp.o

src-libjnif/model/TypeFactory.i: src-libjnif/model/TypeFactory.cpp.i

.PHONY : src-libjnif/model/TypeFactory.i

# target to preprocess a source file
src-libjnif/model/TypeFactory.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/TypeFactory.cpp.i
.PHONY : src-libjnif/model/TypeFactory.cpp.i

src-libjnif/model/TypeFactory.s: src-libjnif/model/TypeFactory.cpp.s

.PHONY : src-libjnif/model/TypeFactory.s

# target to generate assembly for a file
src-libjnif/model/TypeFactory.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/TypeFactory.cpp.s
.PHONY : src-libjnif/model/TypeFactory.cpp.s

src-libjnif/model/Version.o: src-libjnif/model/Version.cpp.o

.PHONY : src-libjnif/model/Version.o

# target to build an object file
src-libjnif/model/Version.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Version.cpp.o
.PHONY : src-libjnif/model/Version.cpp.o

src-libjnif/model/Version.i: src-libjnif/model/Version.cpp.i

.PHONY : src-libjnif/model/Version.i

# target to preprocess a source file
src-libjnif/model/Version.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Version.cpp.i
.PHONY : src-libjnif/model/Version.cpp.i

src-libjnif/model/Version.s: src-libjnif/model/Version.cpp.s

.PHONY : src-libjnif/model/Version.s

# target to generate assembly for a file
src-libjnif/model/Version.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/Version.cpp.s
.PHONY : src-libjnif/model/Version.cpp.s

src-libjnif/model/attrs/Attr.o: src-libjnif/model/attrs/Attr.cpp.o

.PHONY : src-libjnif/model/attrs/Attr.o

# target to build an object file
src-libjnif/model/attrs/Attr.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/attrs/Attr.cpp.o
.PHONY : src-libjnif/model/attrs/Attr.cpp.o

src-libjnif/model/attrs/Attr.i: src-libjnif/model/attrs/Attr.cpp.i

.PHONY : src-libjnif/model/attrs/Attr.i

# target to preprocess a source file
src-libjnif/model/attrs/Attr.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/attrs/Attr.cpp.i
.PHONY : src-libjnif/model/attrs/Attr.cpp.i

src-libjnif/model/attrs/Attr.s: src-libjnif/model/attrs/Attr.cpp.s

.PHONY : src-libjnif/model/attrs/Attr.s

# target to generate assembly for a file
src-libjnif/model/attrs/Attr.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/model/attrs/Attr.cpp.s
.PHONY : src-libjnif/model/attrs/Attr.cpp.s

src-libjnif/parser/ClassFileParser.o: src-libjnif/parser/ClassFileParser.cpp.o

.PHONY : src-libjnif/parser/ClassFileParser.o

# target to build an object file
src-libjnif/parser/ClassFileParser.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/parser/ClassFileParser.cpp.o
.PHONY : src-libjnif/parser/ClassFileParser.cpp.o

src-libjnif/parser/ClassFileParser.i: src-libjnif/parser/ClassFileParser.cpp.i

.PHONY : src-libjnif/parser/ClassFileParser.i

# target to preprocess a source file
src-libjnif/parser/ClassFileParser.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/parser/ClassFileParser.cpp.i
.PHONY : src-libjnif/parser/ClassFileParser.cpp.i

src-libjnif/parser/ClassFileParser.s: src-libjnif/parser/ClassFileParser.cpp.s

.PHONY : src-libjnif/parser/ClassFileParser.s

# target to generate assembly for a file
src-libjnif/parser/ClassFileParser.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/parser/ClassFileParser.cpp.s
.PHONY : src-libjnif/parser/ClassFileParser.cpp.s

src-libjnif/printer.o: src-libjnif/printer.cpp.o

.PHONY : src-libjnif/printer.o

# target to build an object file
src-libjnif/printer.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/printer.cpp.o
.PHONY : src-libjnif/printer.cpp.o

src-libjnif/printer.i: src-libjnif/printer.cpp.i

.PHONY : src-libjnif/printer.i

# target to preprocess a source file
src-libjnif/printer.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/printer.cpp.i
.PHONY : src-libjnif/printer.cpp.i

src-libjnif/printer.s: src-libjnif/printer.cpp.s

.PHONY : src-libjnif/printer.s

# target to generate assembly for a file
src-libjnif/printer.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/printer.cpp.s
.PHONY : src-libjnif/printer.cpp.s

src-libjnif/stream/ClassFileStream.o: src-libjnif/stream/ClassFileStream.cpp.o

.PHONY : src-libjnif/stream/ClassFileStream.o

# target to build an object file
src-libjnif/stream/ClassFileStream.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/stream/ClassFileStream.cpp.o
.PHONY : src-libjnif/stream/ClassFileStream.cpp.o

src-libjnif/stream/ClassFileStream.i: src-libjnif/stream/ClassFileStream.cpp.i

.PHONY : src-libjnif/stream/ClassFileStream.i

# target to preprocess a source file
src-libjnif/stream/ClassFileStream.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/stream/ClassFileStream.cpp.i
.PHONY : src-libjnif/stream/ClassFileStream.cpp.i

src-libjnif/stream/ClassFileStream.s: src-libjnif/stream/ClassFileStream.cpp.s

.PHONY : src-libjnif/stream/ClassFileStream.s

# target to generate assembly for a file
src-libjnif/stream/ClassFileStream.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/stream/ClassFileStream.cpp.s
.PHONY : src-libjnif/stream/ClassFileStream.cpp.s

src-libjnif/writer.o: src-libjnif/writer.cpp.o

.PHONY : src-libjnif/writer.o

# target to build an object file
src-libjnif/writer.cpp.o:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/writer.cpp.o
.PHONY : src-libjnif/writer.cpp.o

src-libjnif/writer.i: src-libjnif/writer.cpp.i

.PHONY : src-libjnif/writer.i

# target to preprocess a source file
src-libjnif/writer.cpp.i:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/writer.cpp.i
.PHONY : src-libjnif/writer.cpp.i

src-libjnif/writer.s: src-libjnif/writer.cpp.s

.PHONY : src-libjnif/writer.s

# target to generate assembly for a file
src-libjnif/writer.cpp.s:
	$(MAKE) -f CMakeFiles/jnif.dir/build.make CMakeFiles/jnif.dir/src-libjnif/writer.cpp.s
.PHONY : src-libjnif/writer.cpp.s

src-testjars/testjars.o: src-testjars/testjars.cpp.o

.PHONY : src-testjars/testjars.o

# target to build an object file
src-testjars/testjars.cpp.o:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/testjars.cpp.o
.PHONY : src-testjars/testjars.cpp.o

src-testjars/testjars.i: src-testjars/testjars.cpp.i

.PHONY : src-testjars/testjars.i

# target to preprocess a source file
src-testjars/testjars.cpp.i:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/testjars.cpp.i
.PHONY : src-testjars/testjars.cpp.i

src-testjars/testjars.s: src-testjars/testjars.cpp.s

.PHONY : src-testjars/testjars.s

# target to generate assembly for a file
src-testjars/testjars.cpp.s:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/testjars.cpp.s
.PHONY : src-testjars/testjars.cpp.s

src-testjars/tests.o: src-testjars/tests.cpp.o

.PHONY : src-testjars/tests.o

# target to build an object file
src-testjars/tests.cpp.o:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/tests.cpp.o
.PHONY : src-testjars/tests.cpp.o

src-testjars/tests.i: src-testjars/tests.cpp.i

.PHONY : src-testjars/tests.i

# target to preprocess a source file
src-testjars/tests.cpp.i:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/tests.cpp.i
.PHONY : src-testjars/tests.cpp.i

src-testjars/tests.s: src-testjars/tests.cpp.s

.PHONY : src-testjars/tests.s

# target to generate assembly for a file
src-testjars/tests.cpp.s:
	$(MAKE) -f CMakeFiles/testjars.dir/build.make CMakeFiles/testjars.dir/src-testjars/tests.cpp.s
.PHONY : src-testjars/tests.cpp.s

src-testunit/testunit.o: src-testunit/testunit.cpp.o

.PHONY : src-testunit/testunit.o

# target to build an object file
src-testunit/testunit.cpp.o:
	$(MAKE) -f CMakeFiles/testunit.dir/build.make CMakeFiles/testunit.dir/src-testunit/testunit.cpp.o
.PHONY : src-testunit/testunit.cpp.o

src-testunit/testunit.i: src-testunit/testunit.cpp.i

.PHONY : src-testunit/testunit.i

# target to preprocess a source file
src-testunit/testunit.cpp.i:
	$(MAKE) -f CMakeFiles/testunit.dir/build.make CMakeFiles/testunit.dir/src-testunit/testunit.cpp.i
.PHONY : src-testunit/testunit.cpp.i

src-testunit/testunit.s: src-testunit/testunit.cpp.s

.PHONY : src-testunit/testunit.s

# target to generate assembly for a file
src-testunit/testunit.cpp.s:
	$(MAKE) -f CMakeFiles/testunit.dir/build.make CMakeFiles/testunit.dir/src-testunit/testunit.cpp.s
.PHONY : src-testunit/testunit.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... testjars"
	@echo "... testunit"
	@echo "... jnifp"
	@echo "... jnif"
	@echo "... src-jnifp/jnifp.o"
	@echo "... src-jnifp/jnifp.i"
	@echo "... src-jnifp/jnifp.s"
	@echo "... src-libjnif/BasicBlock.o"
	@echo "... src-libjnif/BasicBlock.i"
	@echo "... src-libjnif/BasicBlock.s"
	@echo "... src-libjnif/ClassHierarchy.o"
	@echo "... src-libjnif/ClassHierarchy.i"
	@echo "... src-libjnif/ClassHierarchy.s"
	@echo "... src-libjnif/ControlFlowGraph.o"
	@echo "... src-libjnif/ControlFlowGraph.i"
	@echo "... src-libjnif/ControlFlowGraph.s"
	@echo "... src-libjnif/Error.o"
	@echo "... src-libjnif/Error.i"
	@echo "... src-libjnif/Error.s"
	@echo "... src-libjnif/Frame.o"
	@echo "... src-libjnif/Frame.i"
	@echo "... src-libjnif/Frame.s"
	@echo "... src-libjnif/jar/ioapi.o"
	@echo "... src-libjnif/jar/ioapi.i"
	@echo "... src-libjnif/jar/ioapi.s"
	@echo "... src-libjnif/jar/unzip.o"
	@echo "... src-libjnif/jar/unzip.i"
	@echo "... src-libjnif/jar/unzip.s"
	@echo "... src-libjnif/model/Arena.o"
	@echo "... src-libjnif/model/Arena.i"
	@echo "... src-libjnif/model/Arena.s"
	@echo "... src-libjnif/model/ClassFile.o"
	@echo "... src-libjnif/model/ClassFile.i"
	@echo "... src-libjnif/model/ClassFile.s"
	@echo "... src-libjnif/model/ConstPool.o"
	@echo "... src-libjnif/model/ConstPool.i"
	@echo "... src-libjnif/model/ConstPool.s"
	@echo "... src-libjnif/model/Inst.o"
	@echo "... src-libjnif/model/Inst.i"
	@echo "... src-libjnif/model/Inst.s"
	@echo "... src-libjnif/model/InstList.o"
	@echo "... src-libjnif/model/InstList.i"
	@echo "... src-libjnif/model/InstList.s"
	@echo "... src-libjnif/model/Member.o"
	@echo "... src-libjnif/model/Member.i"
	@echo "... src-libjnif/model/Member.s"
	@echo "... src-libjnif/model/Type.o"
	@echo "... src-libjnif/model/Type.i"
	@echo "... src-libjnif/model/Type.s"
	@echo "... src-libjnif/model/TypeFactory.o"
	@echo "... src-libjnif/model/TypeFactory.i"
	@echo "... src-libjnif/model/TypeFactory.s"
	@echo "... src-libjnif/model/Version.o"
	@echo "... src-libjnif/model/Version.i"
	@echo "... src-libjnif/model/Version.s"
	@echo "... src-libjnif/model/attrs/Attr.o"
	@echo "... src-libjnif/model/attrs/Attr.i"
	@echo "... src-libjnif/model/attrs/Attr.s"
	@echo "... src-libjnif/parser/ClassFileParser.o"
	@echo "... src-libjnif/parser/ClassFileParser.i"
	@echo "... src-libjnif/parser/ClassFileParser.s"
	@echo "... src-libjnif/printer.o"
	@echo "... src-libjnif/printer.i"
	@echo "... src-libjnif/printer.s"
	@echo "... src-libjnif/stream/ClassFileStream.o"
	@echo "... src-libjnif/stream/ClassFileStream.i"
	@echo "... src-libjnif/stream/ClassFileStream.s"
	@echo "... src-libjnif/writer.o"
	@echo "... src-libjnif/writer.i"
	@echo "... src-libjnif/writer.s"
	@echo "... src-testjars/testjars.o"
	@echo "... src-testjars/testjars.i"
	@echo "... src-testjars/testjars.s"
	@echo "... src-testjars/tests.o"
	@echo "... src-testjars/tests.i"
	@echo "... src-testjars/tests.s"
	@echo "... src-testunit/testunit.o"
	@echo "... src-testunit/testunit.i"
	@echo "... src-testunit/testunit.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

